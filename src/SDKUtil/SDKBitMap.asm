; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B ; std::_Num_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_base@std@@2_NB		; std::_Num_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_base@std@@2_NB		; std::_Num_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_base@std@@2_NB		; std::_Num_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_base@std@@2_NB			; std::_Num_base::is_bounded
PUBLIC	?is_exact@_Num_base@std@@2_NB			; std::_Num_base::is_exact
PUBLIC	?is_iec559@_Num_base@std@@2_NB			; std::_Num_base::is_iec559
PUBLIC	?is_integer@_Num_base@std@@2_NB			; std::_Num_base::is_integer
PUBLIC	?is_modulo@_Num_base@std@@2_NB			; std::_Num_base::is_modulo
PUBLIC	?is_signed@_Num_base@std@@2_NB			; std::_Num_base::is_signed
PUBLIC	?is_specialized@_Num_base@std@@2_NB		; std::_Num_base::is_specialized
PUBLIC	?tinyness_before@_Num_base@std@@2_NB		; std::_Num_base::tinyness_before
PUBLIC	?traps@_Num_base@std@@2_NB			; std::_Num_base::traps
PUBLIC	?round_style@_Num_base@std@@2W4float_round_style@2@B ; std::_Num_base::round_style
PUBLIC	?digits@_Num_base@std@@2HB			; std::_Num_base::digits
PUBLIC	?digits10@_Num_base@std@@2HB			; std::_Num_base::digits10
PUBLIC	?max_digits10@_Num_base@std@@2HB		; std::_Num_base::max_digits10
PUBLIC	?max_exponent@_Num_base@std@@2HB		; std::_Num_base::max_exponent
PUBLIC	?max_exponent10@_Num_base@std@@2HB		; std::_Num_base::max_exponent10
PUBLIC	?min_exponent@_Num_base@std@@2HB		; std::_Num_base::min_exponent
PUBLIC	?min_exponent10@_Num_base@std@@2HB		; std::_Num_base::min_exponent10
PUBLIC	?radix@_Num_base@std@@2HB			; std::_Num_base::radix
PUBLIC	?is_bounded@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_bounded
PUBLIC	?is_exact@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_exact
PUBLIC	?is_integer@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_integer
PUBLIC	?is_modulo@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_modulo
PUBLIC	?is_specialized@_Num_int_base@std@@2_NB		; std::_Num_int_base::is_specialized
PUBLIC	?radix@_Num_int_base@std@@2HB			; std::_Num_int_base::radix
PUBLIC	?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B ; std::_Num_float_base::has_denorm
PUBLIC	?has_denorm_loss@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_denorm_loss
PUBLIC	?has_infinity@_Num_float_base@std@@2_NB		; std::_Num_float_base::has_infinity
PUBLIC	?has_quiet_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_quiet_NaN
PUBLIC	?has_signaling_NaN@_Num_float_base@std@@2_NB	; std::_Num_float_base::has_signaling_NaN
PUBLIC	?is_bounded@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_bounded
PUBLIC	?is_exact@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_exact
PUBLIC	?is_iec559@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_iec559
PUBLIC	?is_integer@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_integer
PUBLIC	?is_modulo@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_modulo
PUBLIC	?is_signed@_Num_float_base@std@@2_NB		; std::_Num_float_base::is_signed
PUBLIC	?is_specialized@_Num_float_base@std@@2_NB	; std::_Num_float_base::is_specialized
PUBLIC	?tinyness_before@_Num_float_base@std@@2_NB	; std::_Num_float_base::tinyness_before
PUBLIC	?traps@_Num_float_base@std@@2_NB		; std::_Num_float_base::traps
PUBLIC	?round_style@_Num_float_base@std@@2W4float_round_style@2@B ; std::_Num_float_base::round_style
PUBLIC	?radix@_Num_float_base@std@@2HB			; std::_Num_float_base::radix
PUBLIC	?is_signed@?$numeric_limits@D@std@@2_NB		; std::numeric_limits<char>::is_signed
PUBLIC	?digits@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits
PUBLIC	?digits10@?$numeric_limits@D@std@@2HB		; std::numeric_limits<char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@D@std@@2HB	; std::numeric_limits<char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_W@std@@2_NB	; std::numeric_limits<wchar_t>::is_signed
PUBLIC	?digits@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits
PUBLIC	?digits10@?$numeric_limits@_W@std@@2HB		; std::numeric_limits<wchar_t>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_W@std@@2HB	; std::numeric_limits<wchar_t>::max_digits10
PUBLIC	?is_modulo@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_modulo
PUBLIC	?is_signed@?$numeric_limits@_N@std@@2_NB	; std::numeric_limits<bool>::is_signed
PUBLIC	?digits@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits
PUBLIC	?digits10@?$numeric_limits@_N@std@@2HB		; std::numeric_limits<bool>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_N@std@@2HB	; std::numeric_limits<bool>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@C@std@@2_NB		; std::numeric_limits<signed char>::is_signed
PUBLIC	?digits@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits
PUBLIC	?digits10@?$numeric_limits@C@std@@2HB		; std::numeric_limits<signed char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@C@std@@2HB	; std::numeric_limits<signed char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@E@std@@2_NB		; std::numeric_limits<unsigned char>::is_signed
PUBLIC	?digits@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits
PUBLIC	?digits10@?$numeric_limits@E@std@@2HB		; std::numeric_limits<unsigned char>::digits10
PUBLIC	?max_digits10@?$numeric_limits@E@std@@2HB	; std::numeric_limits<unsigned char>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@F@std@@2_NB		; std::numeric_limits<short>::is_signed
PUBLIC	?digits@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits
PUBLIC	?digits10@?$numeric_limits@F@std@@2HB		; std::numeric_limits<short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@F@std@@2HB	; std::numeric_limits<short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@G@std@@2_NB		; std::numeric_limits<unsigned short>::is_signed
PUBLIC	?digits@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits
PUBLIC	?digits10@?$numeric_limits@G@std@@2HB		; std::numeric_limits<unsigned short>::digits10
PUBLIC	?max_digits10@?$numeric_limits@G@std@@2HB	; std::numeric_limits<unsigned short>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@H@std@@2_NB		; std::numeric_limits<int>::is_signed
PUBLIC	?digits@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits
PUBLIC	?digits10@?$numeric_limits@H@std@@2HB		; std::numeric_limits<int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@H@std@@2HB	; std::numeric_limits<int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@I@std@@2_NB		; std::numeric_limits<unsigned int>::is_signed
PUBLIC	?digits@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits
PUBLIC	?digits10@?$numeric_limits@I@std@@2HB		; std::numeric_limits<unsigned int>::digits10
PUBLIC	?max_digits10@?$numeric_limits@I@std@@2HB	; std::numeric_limits<unsigned int>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@J@std@@2_NB		; std::numeric_limits<long>::is_signed
PUBLIC	?digits@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits
PUBLIC	?digits10@?$numeric_limits@J@std@@2HB		; std::numeric_limits<long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@J@std@@2HB	; std::numeric_limits<long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@K@std@@2_NB		; std::numeric_limits<unsigned long>::is_signed
PUBLIC	?digits@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits
PUBLIC	?digits10@?$numeric_limits@K@std@@2HB		; std::numeric_limits<unsigned long>::digits10
PUBLIC	?max_digits10@?$numeric_limits@K@std@@2HB	; std::numeric_limits<unsigned long>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_J@std@@2_NB	; std::numeric_limits<__int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits
PUBLIC	?digits10@?$numeric_limits@_J@std@@2HB		; std::numeric_limits<__int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_J@std@@2HB	; std::numeric_limits<__int64>::max_digits10
PUBLIC	?is_signed@?$numeric_limits@_K@std@@2_NB	; std::numeric_limits<unsigned __int64>::is_signed
PUBLIC	?digits@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits
PUBLIC	?digits10@?$numeric_limits@_K@std@@2HB		; std::numeric_limits<unsigned __int64>::digits10
PUBLIC	?max_digits10@?$numeric_limits@_K@std@@2HB	; std::numeric_limits<unsigned __int64>::max_digits10
PUBLIC	?digits@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits
PUBLIC	?digits10@?$numeric_limits@M@std@@2HB		; std::numeric_limits<float>::digits10
PUBLIC	?max_digits10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@M@std@@2HB	; std::numeric_limits<float>::min_exponent10
PUBLIC	?digits@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits
PUBLIC	?digits10@?$numeric_limits@N@std@@2HB		; std::numeric_limits<double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@N@std@@2HB	; std::numeric_limits<double>::min_exponent10
PUBLIC	?digits@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits
PUBLIC	?digits10@?$numeric_limits@O@std@@2HB		; std::numeric_limits<long double>::digits10
PUBLIC	?max_digits10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_digits10
PUBLIC	?max_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent
PUBLIC	?max_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::max_exponent10
PUBLIC	?min_exponent@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent
PUBLIC	?min_exponent10@?$numeric_limits@O@std@@2HB	; std::numeric_limits<long double>::min_exponent10
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@_K$0A@@tr1@std@@2_KB	; std::tr1::integral_constant<unsigned __int64,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2_KB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
CONST	SEGMENT
$SG21929 DB	'rb', 00H
	ORG $+1
$SG21994 DB	'wb', 00H
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2_KB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2_KB DQ 0000000000000100H	; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_K$0A@@tr1@std@@2_KB
CONST	SEGMENT
?value@?$integral_constant@_K$0A@@tr1@std@@2_KB DQ 0000000000000000H ; std::tr1::integral_constant<unsigned __int64,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@O@std@@2HB DD 0fffffecdH ; std::numeric_limits<long double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@O@std@@2HB DD 0fffffc03H	; std::numeric_limits<long double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@O@std@@2HB DD 0134H	; std::numeric_limits<long double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@O@std@@2HB DD 0400H	; std::numeric_limits<long double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@O@std@@2HB DD 011H	; std::numeric_limits<long double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@O@std@@2HB DD 0fH		; std::numeric_limits<long double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@O@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@O@std@@2HB DD 035H		; std::numeric_limits<long double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@N@std@@2HB DD 0fffffecdH ; std::numeric_limits<double>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@N@std@@2HB DD 0fffffc03H	; std::numeric_limits<double>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@N@std@@2HB DD 0134H	; std::numeric_limits<double>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@N@std@@2HB DD 0400H	; std::numeric_limits<double>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@N@std@@2HB DD 011H	; std::numeric_limits<double>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@N@std@@2HB DD 0fH		; std::numeric_limits<double>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@N@std@@2HB DD 035H		; std::numeric_limits<double>::digits
CONST	ENDS
;	COMDAT ?min_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent10@?$numeric_limits@M@std@@2HB DD 0ffffffdbH ; std::numeric_limits<float>::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?min_exponent@?$numeric_limits@M@std@@2HB DD 0ffffff83H	; std::numeric_limits<float>::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent10@?$numeric_limits@M@std@@2HB DD 026H	; std::numeric_limits<float>::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_exponent@?$numeric_limits@M@std@@2HB DD 080H	; std::numeric_limits<float>::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@M@std@@2HB DD 08H	; std::numeric_limits<float>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@M@std@@2HB DD 06H		; std::numeric_limits<float>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@M@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@M@std@@2HB DD 018H		; std::numeric_limits<float>::digits
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_K@std@@2HB DD 015H	; std::numeric_limits<unsigned __int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_K@std@@2HB DD 013H		; std::numeric_limits<unsigned __int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_K@std@@2HB DD 040H		; std::numeric_limits<unsigned __int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_K@std@@2_NB DB 00H		; std::numeric_limits<unsigned __int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_J@std@@2HB DD 014H	; std::numeric_limits<__int64>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_J@std@@2HB DD 012H		; std::numeric_limits<__int64>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_J@std@@2HB DD 03fH		; std::numeric_limits<__int64>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_J@std@@2_NB DB 01H		; std::numeric_limits<__int64>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@K@std@@2HB DD 0bH	; std::numeric_limits<unsigned long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@K@std@@2HB DD 09H		; std::numeric_limits<unsigned long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@K@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@K@std@@2HB DD 020H		; std::numeric_limits<unsigned long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@K@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@K@std@@2_NB DB 00H		; std::numeric_limits<unsigned long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@J@std@@2HB DD 0bH	; std::numeric_limits<long>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@J@std@@2HB DD 09H		; std::numeric_limits<long>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@J@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@J@std@@2HB DD 01fH		; std::numeric_limits<long>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@J@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@J@std@@2_NB DB 01H		; std::numeric_limits<long>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@I@std@@2HB DD 0bH	; std::numeric_limits<unsigned int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@I@std@@2HB DD 09H		; std::numeric_limits<unsigned int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@I@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@I@std@@2HB DD 020H		; std::numeric_limits<unsigned int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@I@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@I@std@@2_NB DB 00H		; std::numeric_limits<unsigned int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@H@std@@2HB DD 0bH	; std::numeric_limits<int>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@H@std@@2HB DD 09H		; std::numeric_limits<int>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@H@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@H@std@@2HB DD 01fH		; std::numeric_limits<int>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@H@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@H@std@@2_NB DB 01H		; std::numeric_limits<int>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@G@std@@2HB DD 06H	; std::numeric_limits<unsigned short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@G@std@@2HB DD 04H		; std::numeric_limits<unsigned short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@G@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@G@std@@2HB DD 010H		; std::numeric_limits<unsigned short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@G@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@G@std@@2_NB DB 00H		; std::numeric_limits<unsigned short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@F@std@@2HB DD 06H	; std::numeric_limits<short>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@F@std@@2HB DD 04H		; std::numeric_limits<short>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@F@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@F@std@@2HB DD 0fH		; std::numeric_limits<short>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@F@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@F@std@@2_NB DB 01H		; std::numeric_limits<short>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@E@std@@2HB DD 04H	; std::numeric_limits<unsigned char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@E@std@@2HB DD 02H		; std::numeric_limits<unsigned char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@E@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@E@std@@2HB DD 08H		; std::numeric_limits<unsigned char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@E@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@E@std@@2_NB DB 00H		; std::numeric_limits<unsigned char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@C@std@@2HB DD 04H	; std::numeric_limits<signed char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@C@std@@2HB DD 02H		; std::numeric_limits<signed char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@C@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@C@std@@2HB DD 07H		; std::numeric_limits<signed char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@C@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@C@std@@2_NB DB 01H		; std::numeric_limits<signed char>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_N@std@@2HB DD 00H	; std::numeric_limits<bool>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_N@std@@2HB DD 00H		; std::numeric_limits<bool>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_N@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_N@std@@2HB DD 01H		; std::numeric_limits<bool>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@?$numeric_limits@_N@std@@2_NB
CONST	SEGMENT
?is_modulo@?$numeric_limits@_N@std@@2_NB DB 00H		; std::numeric_limits<bool>::is_modulo
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@_W@std@@2HB DD 06H	; std::numeric_limits<wchar_t>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@_W@std@@2HB DD 04H		; std::numeric_limits<wchar_t>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@_W@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@_W@std@@2HB DD 010H		; std::numeric_limits<wchar_t>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@_W@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@_W@std@@2_NB DB 00H		; std::numeric_limits<wchar_t>::is_signed
CONST	ENDS
;	COMDAT ?max_digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?max_digits10@?$numeric_limits@D@std@@2HB DD 04H	; std::numeric_limits<char>::max_digits10
CONST	ENDS
;	COMDAT ?digits10@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits10@?$numeric_limits@D@std@@2HB DD 02H		; std::numeric_limits<char>::digits10
CONST	ENDS
;	COMDAT ?digits@?$numeric_limits@D@std@@2HB
CONST	SEGMENT
?digits@?$numeric_limits@D@std@@2HB DD 07H		; std::numeric_limits<char>::digits
CONST	ENDS
;	COMDAT ?is_signed@?$numeric_limits@D@std@@2_NB
CONST	SEGMENT
?is_signed@?$numeric_limits@D@std@@2_NB DB 01H		; std::numeric_limits<char>::is_signed
CONST	ENDS
;	COMDAT ?radix@_Num_float_base@std@@2HB
CONST	SEGMENT
?radix@_Num_float_base@std@@2HB DD 02H			; std::_Num_float_base::radix
CONST	ENDS
;	COMDAT ?round_style@_Num_float_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_float_base@std@@2W4float_round_style@2@B DD 01H ; std::_Num_float_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_float_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_float_base@std@@2_NB DB 01H			; std::_Num_float_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_float_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_float_base@std@@2_NB DB 00H		; std::_Num_float_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_float_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_float_base@std@@2_NB DB 01H		; std::_Num_float_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_float_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_float_base@std@@2_NB DB 01H	; std::_Num_float_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_float_base@std@@2W4float_denorm_style@2@B DD 01H ; std::_Num_float_base::has_denorm
CONST	ENDS
;	COMDAT ?radix@_Num_int_base@std@@2HB
CONST	SEGMENT
?radix@_Num_int_base@std@@2HB DD 02H			; std::_Num_int_base::radix
CONST	ENDS
;	COMDAT ?is_specialized@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_specialized
CONST	ENDS
;	COMDAT ?is_modulo@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_integer
CONST	ENDS
;	COMDAT ?is_exact@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_int_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_int_base@std@@2_NB DB 01H		; std::_Num_int_base::is_bounded
CONST	ENDS
;	COMDAT ?radix@_Num_base@std@@2HB
CONST	SEGMENT
?radix@_Num_base@std@@2HB DD 00H			; std::_Num_base::radix
CONST	ENDS
;	COMDAT ?min_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::min_exponent10
CONST	ENDS
;	COMDAT ?min_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?min_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::min_exponent
CONST	ENDS
;	COMDAT ?max_exponent10@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent10@_Num_base@std@@2HB DD 00H		; std::_Num_base::max_exponent10
CONST	ENDS
;	COMDAT ?max_exponent@_Num_base@std@@2HB
CONST	SEGMENT
?max_exponent@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_exponent
CONST	ENDS
;	COMDAT ?max_digits10@_Num_base@std@@2HB
CONST	SEGMENT
?max_digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::max_digits10
CONST	ENDS
;	COMDAT ?digits10@_Num_base@std@@2HB
CONST	SEGMENT
?digits10@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits10
CONST	ENDS
;	COMDAT ?digits@_Num_base@std@@2HB
CONST	SEGMENT
?digits@_Num_base@std@@2HB DD 00H			; std::_Num_base::digits
CONST	ENDS
;	COMDAT ?round_style@_Num_base@std@@2W4float_round_style@2@B
CONST	SEGMENT
?round_style@_Num_base@std@@2W4float_round_style@2@B DD 00H ; std::_Num_base::round_style
CONST	ENDS
;	COMDAT ?traps@_Num_base@std@@2_NB
CONST	SEGMENT
?traps@_Num_base@std@@2_NB DB 00H			; std::_Num_base::traps
CONST	ENDS
;	COMDAT ?tinyness_before@_Num_base@std@@2_NB
CONST	SEGMENT
?tinyness_before@_Num_base@std@@2_NB DB 00H		; std::_Num_base::tinyness_before
CONST	ENDS
;	COMDAT ?is_specialized@_Num_base@std@@2_NB
CONST	SEGMENT
?is_specialized@_Num_base@std@@2_NB DB 00H		; std::_Num_base::is_specialized
CONST	ENDS
;	COMDAT ?is_signed@_Num_base@std@@2_NB
CONST	SEGMENT
?is_signed@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_signed
CONST	ENDS
;	COMDAT ?is_modulo@_Num_base@std@@2_NB
CONST	SEGMENT
?is_modulo@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_modulo
CONST	ENDS
;	COMDAT ?is_integer@_Num_base@std@@2_NB
CONST	SEGMENT
?is_integer@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_integer
CONST	ENDS
;	COMDAT ?is_iec559@_Num_base@std@@2_NB
CONST	SEGMENT
?is_iec559@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_iec559
CONST	ENDS
;	COMDAT ?is_exact@_Num_base@std@@2_NB
CONST	SEGMENT
?is_exact@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_exact
CONST	ENDS
;	COMDAT ?is_bounded@_Num_base@std@@2_NB
CONST	SEGMENT
?is_bounded@_Num_base@std@@2_NB DB 00H			; std::_Num_base::is_bounded
CONST	ENDS
;	COMDAT ?has_signaling_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_signaling_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_signaling_NaN
CONST	ENDS
;	COMDAT ?has_quiet_NaN@_Num_base@std@@2_NB
CONST	SEGMENT
?has_quiet_NaN@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_quiet_NaN
CONST	ENDS
;	COMDAT ?has_infinity@_Num_base@std@@2_NB
CONST	SEGMENT
?has_infinity@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_infinity
CONST	ENDS
;	COMDAT ?has_denorm_loss@_Num_base@std@@2_NB
CONST	SEGMENT
?has_denorm_loss@_Num_base@std@@2_NB DB 00H		; std::_Num_base::has_denorm_loss
CONST	ENDS
;	COMDAT ?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B
CONST	SEGMENT
?has_denorm@_Num_base@std@@2W4float_denorm_style@2@B DD 00H ; std::_Num_base::has_denorm
CONST	ENDS
PUBLIC	?releaseResources@SDKBitMap@streamsdk@@AEAAXXZ	; streamsdk::SDKBitMap::releaseResources
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	_RTC_Shutdown:PROC
EXTRN	_RTC_InitBase:PROC
pdata	SEGMENT
$pdata$?releaseResources@SDKBitMap@streamsdk@@AEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+143
	DD	imagerel $unwind$?releaseResources@SDKBitMap@streamsdk@@AEAAXXZ
pdata	ENDS
xdata	SEGMENT
$unwind$?releaseResources@SDKBitMap@streamsdk@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT rtc$TMZ
; File c:\development\cellct\tomographic_imaging - current\sdkutil\sdkbitmap.cpp
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
; Function compile flags: /Odtp /RTCsu
rtc$IMZ	ENDS
_TEXT	SEGMENT
$T26051 = 32
$T26052 = 40
this$ = 64
?releaseResources@SDKBitMap@streamsdk@@AEAAXXZ PROC	; streamsdk::SDKBitMap::releaseResources
; Line 8
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rsp
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+64]
; Line 9
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+54], 0
	je	SHORT $LN2@releaseRes
; Line 10
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+54]
	mov	QWORD PTR $T26051[rsp], rax
	mov	rcx, QWORD PTR $T26051[rsp]
	call	??_V@YAXPEAX@Z				; operator delete[]
$LN2@releaseRes:
; Line 13
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+66], 0
	je	SHORT $LN1@releaseRes
; Line 14
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+66]
	mov	QWORD PTR $T26052[rsp], rax
	mov	rcx, QWORD PTR $T26052[rsp]
	call	??_V@YAXPEAX@Z				; operator delete[]
$LN1@releaseRes:
; Line 17
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+54], 0
; Line 18
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+66], 0
; Line 19
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+74], 0
; Line 20
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?releaseResources@SDKBitMap@streamsdk@@AEAAXXZ ENDP	; streamsdk::SDKBitMap::releaseResources
_TEXT	ENDS
PUBLIC	??4SDKBitMap@streamsdk@@QEAAAEAV01@AEBV01@@Z	; streamsdk::SDKBitMap::operator=
EXTRN	memcpy:PROC
EXTRN	??_U@YAPEAX_K@Z:PROC				; operator new[]
pdata	SEGMENT
$pdata$??4SDKBitMap@streamsdk@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN8
	DD	imagerel $LN8+748
	DD	imagerel $unwind$??4SDKBitMap@streamsdk@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$??4SDKBitMap@streamsdk@@QEAAAEAV01@AEBV01@@Z DD 022301H
	DD	0700b920fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
$T26063 = 32
$T26064 = 40
$T26065 = 48
tv271 = 56
tv302 = 64
this$ = 96
rhs$ = 104
??4SDKBitMap@streamsdk@@QEAAAEAV01@AEBV01@@Z PROC	; streamsdk::SDKBitMap::operator=
; Line 23
$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	rdi, rsp
	mov	ecx, 20
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+96]
; Line 24
	mov	rax, QWORD PTR rhs$[rsp]
	cmp	QWORD PTR this$[rsp], rax
	jne	SHORT $LN5@operator
; Line 25
	mov	rax, QWORD PTR this$[rsp]
	jmp	$LN6@operator
$LN5@operator:
; Line 29
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	movzx	ecx, WORD PTR [rcx]
	mov	WORD PTR [rax], cx
; Line 30
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+2]
	mov	DWORD PTR [rax+2], ecx
; Line 31
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	movzx	ecx, WORD PTR [rcx+6]
	mov	WORD PTR [rax+6], cx
; Line 32
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	movzx	ecx, WORD PTR [rcx+8]
	mov	WORD PTR [rax+8], cx
; Line 33
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+10]
	mov	DWORD PTR [rax+10], ecx
; Line 36
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+14]
	mov	DWORD PTR [rax+14], ecx
; Line 37
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+18]
	mov	DWORD PTR [rax+18], ecx
; Line 38
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+22]
	mov	DWORD PTR [rax+22], ecx
; Line 39
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	movzx	ecx, WORD PTR [rcx+26]
	mov	WORD PTR [rax+26], cx
; Line 40
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	movzx	ecx, WORD PTR [rcx+28]
	mov	WORD PTR [rax+28], cx
; Line 41
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+30]
	mov	DWORD PTR [rax+30], ecx
; Line 42
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+34]
	mov	DWORD PTR [rax+34], ecx
; Line 43
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+38]
	mov	DWORD PTR [rax+38], ecx
; Line 44
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+42]
	mov	DWORD PTR [rax+42], ecx
; Line 45
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+46]
	mov	DWORD PTR [rax+46], ecx
; Line 46
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+50]
	mov	DWORD PTR [rax+50], ecx
; Line 48
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+62]
	mov	DWORD PTR [rax+62], ecx
; Line 49
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	movzx	ecx, BYTE PTR [rcx+74]
	mov	BYTE PTR [rax+74], cl
; Line 51
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+54], 0
; Line 52
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+66], 0
; Line 53
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+74]
	test	eax, eax
	je	$LN4@operator
; Line 54
	mov	rax, QWORD PTR rhs$[rsp]
	cmp	QWORD PTR [rax+66], 0
	je	$LN3@operator
; Line 55
	mov	rax, QWORD PTR this$[rsp]
	movsxd	rax, DWORD PTR [rax+62]
	mov	QWORD PTR tv271[rsp], rax
	mov	eax, 4
	mov	rcx, QWORD PTR tv271[rsp]
	mul	rcx
	mov	rcx, -1
	cmovo	rax, rcx
	mov	rcx, rax
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T26063[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T26063[rsp]
	mov	QWORD PTR [rax+66], rcx
; Line 56
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+66], 0
	jne	SHORT $LN2@operator
; Line 57
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+74], 0
; Line 58
	mov	rax, QWORD PTR this$[rsp]
	jmp	$LN6@operator
$LN2@operator:
; Line 60
	mov	rax, QWORD PTR this$[rsp]
	movsxd	rax, DWORD PTR [rax+62]
	shl	rax, 2
	mov	r8, rax
	mov	rax, QWORD PTR rhs$[rsp]
	mov	rdx, QWORD PTR [rax+66]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+66]
	call	memcpy
$LN3@operator:
; Line 63
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+18]
	imul	eax, DWORD PTR [rcx+22]
	cdqe
	mov	QWORD PTR tv302[rsp], rax
	mov	eax, 4
	mov	rcx, QWORD PTR tv302[rsp]
	mul	rcx
	mov	rcx, -1
	cmovo	rax, rcx
	mov	rcx, rax
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T26064[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T26064[rsp]
	mov	QWORD PTR [rax+54], rcx
; Line 64
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+54], 0
	jne	SHORT $LN1@operator
; Line 65
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+66]
	mov	QWORD PTR $T26065[rsp], rax
	mov	rcx, QWORD PTR $T26065[rsp]
	call	??_V@YAXPEAX@Z				; operator delete[]
; Line 66
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+66], 0
; Line 67
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+74], 0
; Line 68
	mov	rax, QWORD PTR this$[rsp]
	jmp	SHORT $LN6@operator
$LN1@operator:
; Line 70
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+18]
	imul	eax, DWORD PTR [rcx+22]
	cdqe
	shl	rax, 2
	mov	r8, rax
	mov	rax, QWORD PTR rhs$[rsp]
	mov	rdx, QWORD PTR [rax+54]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+54]
	call	memcpy
$LN4@operator:
; Line 73
	mov	rax, QWORD PTR this$[rsp]
$LN6@operator:
; Line 74
	add	rsp, 80					; 00000050H
	pop	rdi
	ret	0
??4SDKBitMap@streamsdk@@QEAAAEAV01@AEBV01@@Z ENDP	; streamsdk::SDKBitMap::operator=
_TEXT	ENDS
PUBLIC	?load@SDKBitMap@streamsdk@@QEAAXPEBD@Z		; streamsdk::SDKBitMap::load
EXTRN	memset:PROC
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	fclose:PROC
EXTRN	ferror:PROC
EXTRN	fread:PROC
EXTRN	fopen:PROC
pdata	SEGMENT
$pdata$?load@SDKBitMap@streamsdk@@QEAAXPEBD@Z DD imagerel $LN28
	DD	imagerel $LN28+1613
	DD	imagerel $unwind$?load@SDKBitMap@streamsdk@@QEAAXPEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?load@SDKBitMap@streamsdk@@QEAAXPEBD@Z DD 032901H
	DD	0160112H
	DD	0700bH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
fd$ = 32
sizeBuffer$21947 = 40
tmpPixels$21948 = 48
index$21963 = 56
y$21964 = 60
x$21968 = 64
x$21974 = 68
$T26072 = 72
$T26073 = 80
$T26074 = 88
$T26075 = 96
$T26076 = 104
$T26077 = 112
$T26078 = 120
$T26079 = 128
$T26080 = 136
tv129 = 144
tv399 = 152
tv168 = 160
tv235 = 168
this$ = 192
filename$ = 200
?load@SDKBitMap@streamsdk@@QEAAXPEBD@Z PROC		; streamsdk::SDKBitMap::load
; Line 78
$LN28:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 176				; 000000b0H
	mov	rdi, rsp
	mov	ecx, 44					; 0000002cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+192]
; Line 80
	mov	rcx, QWORD PTR this$[rsp]
	call	?releaseResources@SDKBitMap@streamsdk@@AEAAXXZ ; streamsdk::SDKBitMap::releaseResources
; Line 83
	lea	rdx, OFFSET FLAT:$SG21929
	mov	rcx, QWORD PTR filename$[rsp]
	call	fopen
	mov	QWORD PTR fd$[rsp], rax
; Line 88
	cmp	QWORD PTR fd$[rsp], 0
	je	$LN23@load
; Line 90
	mov	r9, QWORD PTR fd$[rsp]
	mov	r8d, 1
	mov	edx, 14
	mov	rcx, QWORD PTR this$[rsp]
	call	fread
; Line 93
	mov	rcx, QWORD PTR fd$[rsp]
	call	ferror
	test	eax, eax
	je	SHORT $LN22@load
; Line 94
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 95
	jmp	$LN24@load
$LN22@load:
; Line 99
	mov	rax, QWORD PTR this$[rsp]
	movsx	eax, WORD PTR [rax]
	cmp	eax, 19778				; 00004d42H
	je	SHORT $LN21@load
; Line 100
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 101
	jmp	$LN24@load
$LN21@load:
; Line 105
	cmp	QWORD PTR this$[rsp], 0
	je	SHORT $LN26@load
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 14
	mov	QWORD PTR tv129[rsp], rax
	jmp	SHORT $LN27@load
$LN26@load:
	mov	QWORD PTR tv129[rsp], 0
$LN27@load:
	mov	r9, QWORD PTR fd$[rsp]
	mov	r8d, 1
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR tv129[rsp]
	call	fread
; Line 108
	mov	rcx, QWORD PTR fd$[rsp]
	call	ferror
	test	eax, eax
	je	SHORT $LN20@load
; Line 109
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 110
	jmp	$LN24@load
$LN20@load:
; Line 114
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+30], 0
	je	SHORT $LN19@load
; Line 115
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 116
	jmp	$LN24@load
$LN19@load:
; Line 120
	mov	rax, QWORD PTR this$[rsp]
	movsx	eax, WORD PTR [rax+28]
	cmp	eax, 8
	jge	SHORT $LN18@load
; Line 121
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 122
	jmp	$LN24@load
$LN18@load:
; Line 126
	mov	rax, QWORD PTR this$[rsp]
	movsx	eax, WORD PTR [rax+28]
	mov	ecx, 1
	mov	DWORD PTR tv399[rsp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv399[rsp]
	shl	eax, cl
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+62], eax
; Line 129
	mov	rax, QWORD PTR this$[rsp]
	movsx	eax, WORD PTR [rax+28]
	cmp	eax, 8
	jne	$LN17@load
; Line 130
	mov	rax, QWORD PTR this$[rsp]
	movsxd	rax, DWORD PTR [rax+62]
	mov	QWORD PTR tv168[rsp], rax
	mov	eax, 4
	mov	rcx, QWORD PTR tv168[rsp]
	mul	rcx
	mov	rcx, -1
	cmovo	rax, rcx
	mov	rcx, rax
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T26072[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T26072[rsp]
	mov	QWORD PTR [rax+66], rcx
; Line 131
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+66], 0
	jne	SHORT $LN16@load
; Line 132
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 133
	jmp	$LN24@load
$LN16@load:
; Line 139
	mov	rax, QWORD PTR this$[rsp]
	movsxd	rax, DWORD PTR [rax+62]
	shl	rax, 2
	mov	r9, QWORD PTR fd$[rsp]
	mov	r8d, 1
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+66]
	call	fread
; Line 142
	mov	rcx, QWORD PTR fd$[rsp]
	call	ferror
	test	eax, eax
	je	SHORT $LN15@load
; Line 143
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 144
	jmp	$LN24@load
$LN15@load:
$LN17@load:
; Line 149
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR [rcx+10]
	mov	eax, DWORD PTR [rax+2]
	sub	eax, ecx
	mov	DWORD PTR sizeBuffer$21947[rsp], eax
; Line 150
	mov	eax, DWORD PTR sizeBuffer$21947[rsp]
	mov	ecx, eax
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T26073[rsp], rax
	mov	rax, QWORD PTR $T26073[rsp]
	mov	QWORD PTR tmpPixels$21948[rsp], rax
; Line 152
	cmp	QWORD PTR tmpPixels$21948[rsp], 0
	jne	SHORT $LN14@load
; Line 153
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+66]
	mov	QWORD PTR $T26074[rsp], rax
	mov	rcx, QWORD PTR $T26074[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 154
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+66], 0
; Line 155
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 156
	jmp	$LN24@load
$LN14@load:
; Line 160
	mov	eax, DWORD PTR sizeBuffer$21947[rsp]
	mov	r9, QWORD PTR fd$[rsp]
	mov	r8d, 1
	mov	edx, eax
	mov	rcx, QWORD PTR tmpPixels$21948[rsp]
	call	fread
; Line 163
	mov	rcx, QWORD PTR fd$[rsp]
	call	ferror
	test	eax, eax
	je	SHORT $LN13@load
; Line 164
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+66]
	mov	QWORD PTR $T26075[rsp], rax
	mov	rcx, QWORD PTR $T26075[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 165
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+66], 0
; Line 166
	mov	rax, QWORD PTR tmpPixels$21948[rsp]
	mov	QWORD PTR $T26076[rsp], rax
	mov	rcx, QWORD PTR $T26076[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 167
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 168
	jmp	$LN24@load
$LN13@load:
; Line 172
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+18]
	imul	eax, DWORD PTR [rcx+22]
	cdqe
	mov	QWORD PTR tv235[rsp], rax
	mov	eax, 4
	mov	rcx, QWORD PTR tv235[rsp]
	mul	rcx
	mov	rcx, -1
	cmovo	rax, rcx
	mov	rcx, rax
	call	??_U@YAPEAX_K@Z				; operator new[]
	mov	QWORD PTR $T26077[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T26077[rsp]
	mov	QWORD PTR [rax+54], rcx
; Line 173
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+54], 0
	jne	SHORT $LN12@load
; Line 174
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+66]
	mov	QWORD PTR $T26078[rsp], rax
	mov	rcx, QWORD PTR $T26078[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 175
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+66], 0
; Line 176
	mov	rax, QWORD PTR tmpPixels$21948[rsp]
	mov	QWORD PTR $T26079[rsp], rax
	mov	rcx, QWORD PTR $T26079[rsp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 177
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 178
	jmp	$LN24@load
$LN12@load:
; Line 181
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+18]
	imul	eax, DWORD PTR [rcx+22]
	cdqe
	shl	rax, 2
	mov	r8, rax
	mov	edx, 255				; 000000ffH
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+54]
	call	memset
; Line 183
	mov	DWORD PTR index$21963[rsp], 0
; Line 184
	mov	DWORD PTR y$21964[rsp], 0
	jmp	SHORT $LN11@load
$LN10@load:
	mov	eax, DWORD PTR y$21964[rsp]
	inc	eax
	mov	DWORD PTR y$21964[rsp], eax
$LN11@load:
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+22]
	cmp	DWORD PTR y$21964[rsp], eax
	jge	$LN9@load
; Line 185
	mov	DWORD PTR x$21968[rsp], 0
	jmp	SHORT $LN8@load
$LN7@load:
	mov	eax, DWORD PTR x$21968[rsp]
	inc	eax
	mov	DWORD PTR x$21968[rsp], eax
$LN8@load:
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+18]
	cmp	DWORD PTR x$21968[rsp], eax
	jge	$LN6@load
; Line 187
	mov	rax, QWORD PTR this$[rsp]
	movsx	eax, WORD PTR [rax+28]
	cmp	eax, 8
	jne	SHORT $LN5@load
; Line 188
	mov	eax, DWORD PTR index$21963[rsp]
	mov	rcx, QWORD PTR tmpPixels$21948[rsp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+66]
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR y$21964[rsp]
	imul	edx, DWORD PTR [rcx+18]
	mov	ecx, edx
	add	ecx, DWORD PTR x$21968[rsp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+54]
	mov	DWORD PTR [rdx+rcx*4], eax
	mov	eax, DWORD PTR index$21963[rsp]
	inc	eax
	mov	DWORD PTR index$21963[rsp], eax
; Line 190
	jmp	$LN4@load
$LN5@load:
; Line 191
	mov	eax, DWORD PTR index$21963[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR y$21964[rsp]
	imul	edx, DWORD PTR [rcx+18]
	mov	ecx, edx
	add	ecx, DWORD PTR x$21968[rsp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+54]
	mov	r8, QWORD PTR tmpPixels$21948[rsp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx*4+2], al
	mov	eax, DWORD PTR index$21963[rsp]
	inc	eax
	mov	DWORD PTR index$21963[rsp], eax
; Line 192
	mov	eax, DWORD PTR index$21963[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR y$21964[rsp]
	imul	edx, DWORD PTR [rcx+18]
	mov	ecx, edx
	add	ecx, DWORD PTR x$21968[rsp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+54]
	mov	r8, QWORD PTR tmpPixels$21948[rsp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx*4+1], al
	mov	eax, DWORD PTR index$21963[rsp]
	inc	eax
	mov	DWORD PTR index$21963[rsp], eax
; Line 193
	mov	eax, DWORD PTR index$21963[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR y$21964[rsp]
	imul	edx, DWORD PTR [rcx+18]
	mov	ecx, edx
	add	ecx, DWORD PTR x$21968[rsp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+54]
	mov	r8, QWORD PTR tmpPixels$21948[rsp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx*4], al
	mov	eax, DWORD PTR index$21963[rsp]
	inc	eax
	mov	DWORD PTR index$21963[rsp], eax
$LN4@load:
; Line 195
	jmp	$LN7@load
$LN6@load:
; Line 198
	mov	DWORD PTR x$21974[rsp], 0
	jmp	SHORT $LN3@load
$LN2@load:
	mov	eax, DWORD PTR x$21974[rsp]
	inc	eax
	mov	DWORD PTR x$21974[rsp], eax
$LN3@load:
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+18]
	imul	eax, 3
	cdq
	and	edx, 3
	add	eax, edx
	and	eax, 3
	sub	eax, edx
	mov	ecx, 4
	sub	ecx, eax
	mov	eax, ecx
	cdq
	and	edx, 3
	add	eax, edx
	and	eax, 3
	sub	eax, edx
	cmp	DWORD PTR x$21974[rsp], eax
	jge	SHORT $LN1@load
; Line 199
	mov	eax, DWORD PTR index$21963[rsp]
	inc	eax
	mov	DWORD PTR index$21963[rsp], eax
; Line 200
	jmp	SHORT $LN2@load
$LN1@load:
; Line 201
	jmp	$LN10@load
$LN9@load:
; Line 204
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 205
	mov	rax, QWORD PTR tmpPixels$21948[rsp]
	mov	QWORD PTR $T26080[rsp], rax
	mov	rcx, QWORD PTR $T26080[rsp]
	call	??_V@YAXPEAX@Z				; operator delete[]
; Line 208
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+74], 1
$LN23@load:
$LN24@load:
; Line 210
	add	rsp, 176				; 000000b0H
	pop	rdi
	ret	0
?load@SDKBitMap@streamsdk@@QEAAXPEBD@Z ENDP		; streamsdk::SDKBitMap::load
_TEXT	ENDS
PUBLIC	?colorIndex@SDKBitMap@streamsdk@@AEAAHUuchar4@2@@Z ; streamsdk::SDKBitMap::colorIndex
pdata	SEGMENT
$pdata$?colorIndex@SDKBitMap@streamsdk@@AEAAHUuchar4@2@@Z DD imagerel $LN7
	DD	imagerel $LN7+189
	DD	imagerel $unwind$?colorIndex@SDKBitMap@streamsdk@@AEAAHUuchar4@2@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?colorIndex@SDKBitMap@streamsdk@@AEAAHUuchar4@2@@Z DD 022201H
	DD	0700a120eH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
i$21983 = 0
this$ = 32
color$ = 40
?colorIndex@SDKBitMap@streamsdk@@AEAAHUuchar4@2@@Z PROC	; streamsdk::SDKBitMap::colorIndex
; Line 214
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16
	mov	rdi, rsp
	mov	ecx, 4
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+32]
; Line 215
	mov	DWORD PTR i$21983[rsp], 0
	jmp	SHORT $LN4@colorIndex
$LN3@colorIndex:
	mov	eax, DWORD PTR i$21983[rsp]
	inc	eax
	mov	DWORD PTR i$21983[rsp], eax
$LN4@colorIndex:
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+62]
	cmp	DWORD PTR i$21983[rsp], eax
	jge	SHORT $LN2@colorIndex
; Line 219
	movsxd	rax, DWORD PTR i$21983[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+66]
	movzx	eax, BYTE PTR [rcx+rax*4]
	movzx	ecx, BYTE PTR color$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN1@colorIndex
	movsxd	rax, DWORD PTR i$21983[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+66]
	movzx	eax, BYTE PTR [rcx+rax*4+1]
	movzx	ecx, BYTE PTR color$[rsp+1]
	cmp	eax, ecx
	jne	SHORT $LN1@colorIndex
	movsxd	rax, DWORD PTR i$21983[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+66]
	movzx	eax, BYTE PTR [rcx+rax*4+2]
	movzx	ecx, BYTE PTR color$[rsp+2]
	cmp	eax, ecx
	jne	SHORT $LN1@colorIndex
	movsxd	rax, DWORD PTR i$21983[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+66]
	movzx	eax, BYTE PTR [rcx+rax*4+3]
	movzx	ecx, BYTE PTR color$[rsp+3]
	cmp	eax, ecx
	jne	SHORT $LN1@colorIndex
; Line 220
	mov	eax, DWORD PTR i$21983[rsp]
	jmp	SHORT $LN5@colorIndex
$LN1@colorIndex:
; Line 222
	jmp	$LN3@colorIndex
$LN2@colorIndex:
; Line 224
	xor	eax, eax
$LN5@colorIndex:
; Line 225
	add	rsp, 16
	pop	rdi
	ret	0
?colorIndex@SDKBitMap@streamsdk@@AEAAHUuchar4@2@@Z ENDP	; streamsdk::SDKBitMap::colorIndex
_TEXT	ENDS
PUBLIC	?write@SDKBitMap@streamsdk@@QEAA_NPEBD@Z	; streamsdk::SDKBitMap::write
EXTRN	fputc:PROC
EXTRN	fwrite:PROC
pdata	SEGMENT
$pdata$?write@SDKBitMap@streamsdk@@QEAA_NPEBD@Z DD imagerel $LN23
	DD	imagerel $LN23+744
	DD	imagerel $unwind$?write@SDKBitMap@streamsdk@@QEAA_NPEBD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?write@SDKBitMap@streamsdk@@QEAA_NPEBD@Z DD 022301H
	DD	0700b720fH
; Function compile flags: /Odtp /RTCsu
xdata	ENDS
_TEXT	SEGMENT
fd$ = 32
y$22006 = 40
x$22010 = 44
x$22017 = 48
tv91 = 56
this$ = 80
filename$ = 88
?write@SDKBitMap@streamsdk@@QEAA_NPEBD@Z PROC		; streamsdk::SDKBitMap::write
; Line 229
$LN23:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rdi, rsp
	mov	ecx, 16
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+80]
; Line 230
	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+74]
	test	eax, eax
	jne	SHORT $LN18@write
; Line 231
	xor	al, al
	jmp	$LN19@write
$LN18@write:
; Line 235
	lea	rdx, OFFSET FLAT:$SG21994
	mov	rcx, QWORD PTR filename$[rsp]
	call	fopen
	mov	QWORD PTR fd$[rsp], rax
; Line 241
	cmp	QWORD PTR fd$[rsp], 0
	je	$LN17@write
; Line 243
	mov	r9, QWORD PTR fd$[rsp]
	mov	r8d, 1
	mov	edx, 14
	mov	rcx, QWORD PTR this$[rsp]
	call	fwrite
; Line 246
	mov	rcx, QWORD PTR fd$[rsp]
	call	ferror
	test	eax, eax
	je	SHORT $LN16@write
; Line 247
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 248
	xor	al, al
	jmp	$LN19@write
$LN16@write:
; Line 252
	cmp	QWORD PTR this$[rsp], 0
	je	SHORT $LN21@write
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 14
	mov	QWORD PTR tv91[rsp], rax
	jmp	SHORT $LN22@write
$LN21@write:
	mov	QWORD PTR tv91[rsp], 0
$LN22@write:
	mov	r9, QWORD PTR fd$[rsp]
	mov	r8d, 1
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR tv91[rsp]
	call	fwrite
; Line 255
	mov	rcx, QWORD PTR fd$[rsp]
	call	ferror
	test	eax, eax
	je	SHORT $LN15@write
; Line 256
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 257
	xor	al, al
	jmp	$LN19@write
$LN15@write:
; Line 261
	mov	rax, QWORD PTR this$[rsp]
	movsx	eax, WORD PTR [rax+28]
	cmp	eax, 8
	jne	SHORT $LN14@write
; Line 266
	mov	rax, QWORD PTR this$[rsp]
	movsxd	rax, DWORD PTR [rax+62]
	shl	rax, 2
	mov	r9, QWORD PTR fd$[rsp]
	mov	r8d, 1
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+66]
	call	fwrite
; Line 269
	mov	rcx, QWORD PTR fd$[rsp]
	call	ferror
	test	eax, eax
	je	SHORT $LN13@write
; Line 270
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 271
	xor	al, al
	jmp	$LN19@write
$LN13@write:
$LN14@write:
; Line 275
	mov	DWORD PTR y$22006[rsp], 0
	jmp	SHORT $LN12@write
$LN11@write:
	mov	eax, DWORD PTR y$22006[rsp]
	inc	eax
	mov	DWORD PTR y$22006[rsp], eax
$LN12@write:
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+22]
	cmp	DWORD PTR y$22006[rsp], eax
	jge	$LN10@write
; Line 276
	mov	DWORD PTR x$22010[rsp], 0
	jmp	SHORT $LN9@write
$LN8@write:
	mov	eax, DWORD PTR x$22010[rsp]
	inc	eax
	mov	DWORD PTR x$22010[rsp], eax
$LN9@write:
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+18]
	cmp	DWORD PTR x$22010[rsp], eax
	jge	$LN7@write
; Line 278
	mov	rax, QWORD PTR this$[rsp]
	movsx	eax, WORD PTR [rax+28]
	cmp	eax, 8
	jne	SHORT $LN6@write
; Line 282
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR y$22006[rsp]
	imul	ecx, DWORD PTR [rax+18]
	mov	eax, ecx
	add	eax, DWORD PTR x$22010[rsp]
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+54]
	mov	edx, DWORD PTR [rcx+rax*4]
	mov	rcx, QWORD PTR this$[rsp]
	call	?colorIndex@SDKBitMap@streamsdk@@AEAAHUuchar4@2@@Z ; streamsdk::SDKBitMap::colorIndex
	mov	rdx, QWORD PTR fd$[rsp]
	mov	ecx, eax
	call	fputc
; Line 284
	jmp	$LN5@write
$LN6@write:
; Line 285
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR y$22006[rsp]
	imul	ecx, DWORD PTR [rax+18]
	mov	eax, ecx
	add	eax, DWORD PTR x$22010[rsp]
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+54]
	movzx	eax, BYTE PTR [rcx+rax*4+2]
	mov	rdx, QWORD PTR fd$[rsp]
	mov	ecx, eax
	call	fputc
; Line 286
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR y$22006[rsp]
	imul	ecx, DWORD PTR [rax+18]
	mov	eax, ecx
	add	eax, DWORD PTR x$22010[rsp]
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+54]
	movzx	eax, BYTE PTR [rcx+rax*4+1]
	mov	rdx, QWORD PTR fd$[rsp]
	mov	ecx, eax
	call	fputc
; Line 287
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR y$22006[rsp]
	imul	ecx, DWORD PTR [rax+18]
	mov	eax, ecx
	add	eax, DWORD PTR x$22010[rsp]
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+54]
	movzx	eax, BYTE PTR [rcx+rax*4]
	mov	rdx, QWORD PTR fd$[rsp]
	mov	ecx, eax
	call	fputc
; Line 289
	mov	rcx, QWORD PTR fd$[rsp]
	call	ferror
	test	eax, eax
	je	SHORT $LN4@write
; Line 290
	mov	rcx, QWORD PTR fd$[rsp]
	call	fclose
; Line 291
	xor	al, al
	jmp	SHORT $LN19@write
$LN4@write:
$LN5@write:
; Line 294
	jmp	$LN8@write
$LN7@write:
; Line 297
	mov	DWORD PTR x$22017[rsp], 0
	jmp	SHORT $LN3@write
$LN2@write:
	mov	eax, DWORD PTR x$22017[rsp]
	inc	eax
	mov	DWORD PTR x$22017[rsp], eax
$LN3@write:
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+18]
	imul	eax, 3
	cdq
	and	edx, 3
	add	eax, edx
	and	eax, 3
	sub	eax, edx
	mov	ecx, 4
	sub	ecx, eax
	mov	eax, ecx
	cdq
	and	edx, 3
	add	eax, edx
	and	eax, 3
	sub	eax, edx
	cmp	DWORD PTR x$22017[rsp], eax
	jge	SHORT $LN1@write
; Line 298
	mov	rdx, QWORD PTR fd$[rsp]
	xor	ecx, ecx
	call	fputc
; Line 299
	jmp	SHORT $LN2@write
$LN1@write:
; Line 300
	jmp	$LN11@write
$LN10@write:
; Line 302
	mov	al, 1
	jmp	SHORT $LN19@write
$LN17@write:
; Line 305
	xor	al, al
$LN19@write:
; Line 306
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?write@SDKBitMap@streamsdk@@QEAA_NPEBD@Z ENDP		; streamsdk::SDKBitMap::write
_TEXT	ENDS
END
